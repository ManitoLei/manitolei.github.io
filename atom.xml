<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://manitolei.github.io</id>
    <title>ManitoLei</title>
    <updated>2021-01-14T12:03:10.473Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://manitolei.github.io"/>
    <link rel="self" href="https://manitolei.github.io/atom.xml"/>
    <subtitle>Fool&apos;s blog.</subtitle>
    <logo>https://manitolei.github.io/images/avatar.png</logo>
    <icon>https://manitolei.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, ManitoLei</rights>
    <entry>
        <title type="html"><![CDATA[咸鱼刷题[Leetcode]]]></title>
        <id>https://manitolei.github.io/post/leetcode/</id>
        <link href="https://manitolei.github.io/post/leetcode/">
        </link>
        <updated>2021-01-12T14:33:25.000Z</updated>
        <content type="html"><![CDATA[<p>//终于开始学习了！( ╯▽╰)</p>
<h1 id="leetcode刷题-剑指offer数组中重复的数据">Leetcode刷题-剑指Offer（数组中重复的数据）</h1>
<blockquote>
<p>找出数组中重复的数字。</p>
</blockquote>
<blockquote>
<p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p>
</blockquote>
<blockquote>
<p><strong>示例 1</strong>：</p>
</blockquote>
<blockquote>
<p><strong>输入</strong>：<br>
[2, 3, 1, 0, 2, 5, 3]<br>
<strong>输出</strong>：2 或 3</p>
</blockquote>
<blockquote>
<p><strong>限制</strong>：<br>
2 &lt;= n &lt;= 100000</p>
</blockquote>
<hr/>
来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof
<p><span style="color:#777;font-weight:bold;margin-top:50px;">我提交的代码（好low啊！！！）</span></p>
<pre><code>public int findRepeatNumber(int[] nums) {
        //先给数组排序
        Arrays.sort(nums);
        //从头and尾开始找重复的数字(判断相邻数字是否存在相等的)
        for (int i = 0; i &lt; nums.length/2 ; i++) {
            if(nums[i]==nums[i+1]){
                return nums[i];
            }
            if(nums[nums.length-1-i]==nums[nums.length-1-i-1]){
                return nums[nums.length-1-i];
            }
        }
        return -1;
}
</code></pre>
<p><span style="font-size:15px;color:#888">关于Arrays.sort()，百度：在数组的数量小于47的情况下使用插入排序，在大于或等于47或少于286会进入快速排序（双轴快排），大于286采用归并排序</span></p>
<p><span style="color:#777;font-weight:bold;">Leetcode里的题解</span></p>
<pre><code>//哈希查找
public static int findRepeatNumber(int[] nums) {
        Set&lt;Integer&gt; set = new HashSet&lt;Integer&gt;();
        for (int i = 0; i &lt; nums.length ; i++) {
            if(set.contains(nums[i]))
                return nums[i];
            set.add(nums[i]);
        }
        return -1;
}

- 时间复杂度 O(n)
- 空间复杂度 O(n)

//数组代替哈希表
public static int findRepeatNumber(int[] nums) {
        int bucket[] = new int[nums.length];
        Arrays.fill(bucket,-1);
        for (int i = 0; i &lt; nums.length; i++) {
            if(bucket[nums[i]]!=-1)
                return nums[i];
            bucket[nums[i]]=i;
        }
        return -1;
} 
/*
	题目：在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内
*/

- 时间复杂度 O(n)
- 空间复杂度 O(n)
//哈希和数组比较：略

//最优解法
public static int findRepeatNumber4(int[] nums) {
        for (int i = 0; i &lt; nums.length ; i++) {
            while(i!=nums[i]){
                if(nums[i]==nums[nums[i]])
                    return nums[i];
                int tmp=nums[nums[i]];
                nums[nums[i]]=nums[i];
                nums[i]=tmp;
            }
        }
        return -1;
}
//woohoo，这个绝了，我这脑子想不出来就对了。

- 时间复杂度 O(n)
- 空间复杂度 O(1)
    
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://manitolei.github.io/post/hello-gridea/</id>
        <link href="https://manitolei.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>